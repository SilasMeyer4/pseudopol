name: Tauri Multi-Platform Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: x86_64-unknown-linux-gnu
          - os: windows-latest
            platform: x86_64-pc-windows-msvc
          - os: macos-latest
            platform: aarch64-apple-darwin
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install system dependencies on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libglib2.0-dev \
            libgtk-3-dev \
            libsoup-3.0-dev \
            libwebkit2gtk-4.1-dev \
            libjavascriptcoregtk-4.1-dev \
            pkg-config \
            build-essential \
            patchelf # ← this is critical

          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm install

      - name: Set up environment variables for key
        shell: bash
        run: |
          echo "${{ secrets.TAURI_PRIVATE_KEY }}" | base64 --decode > private.key



      - name: Set environment for Linux bundling
        if: matrix.os == 'ubuntu-latest'
        run: |
          chmod +x src-tauri/target/release/bundle/appimage/linuxdeploy* || true
        env:
          TAURI_DEBUG: "1"


      - name: Make linuxdeploy executable
        if: matrix.os == 'ubuntu-latest'
        run: |
            chmod +x src-tauri/target/release/bundle/appimage/linuxdeploy-x86_64.AppImage || true
            chmod +x linuxdeploy-x86_64.AppImage || true
            chmod +x AppRun-x86_64 || true

      - name: Tauri Build and Release
        uses: tauri-apps/tauri-action@v0
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "Release ${{ github.ref_name }}"
          releaseDraft: false
          prerelease: false
          args: "--target ${{ matrix.platform }}"
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          TAURI_PRIVATE_KEY: private.key
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
